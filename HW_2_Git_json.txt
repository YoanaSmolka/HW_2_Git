 Создать внешний репозиторий c названием JSON 
 - Create repository (GitHub) 
 Клонировать репозиторий JSON на локальный компьютер
 - clone URL for https (GitHub, Code) or SSH
 - git clone URL
 Внутри локального JSON создать файл “new.json”
 - vim new.json
- i (INSERT) + написать что-нибудь 
- esc:wq - сохранить и выйти
 Добавить файл под гит.
- git add new.json
 Закоммитить файл.
- git commit -m "add new.json"
 Отправить файл на внешний GitHub репозиторий.
- git push
 Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON.
- vim new.json
- i (INSERT) + 
{
	"name":"Yoana",
	"last_name":"Smolka",
	"age":28,
	"pet":0,
	"salary":1200
} 
- esc:wq - сохранить и выйти
- git add new.json
- git commit -m «update_new.json»
  Отправить изменения на внешний репозиторий.
- git push
  Создать файл preferences.json
- vim preferences.json
 13. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON.
- i
- {
	"favorite_film":"1+1",
	"favorite_serial":"Just you wait",
	"favorite_food":"meat",
	"favorite_season":"summer,
	"country":"Israel"
}
- esc:wq
 14. Создать файл sklls.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON
 		{

 	"Базовая теория":

	[

		"Что такое тестирование",

		"багрепорты",

		"документация",

		"виды",

		"методы",

		"направления тестирования",

		"SDLS",

		"STLC"

	],

	"Коды ответов HTTP сервера":100-500,

	"Что такое":

	[		

		"JSON",

		"XML"

	],

	"Тестирование API":

	[	

		"Postman",

		"JS",

		"автотесты API"

	],

	"Снифинг http web трафика":

	[	

		"Charles",

		"Fiddler"

	],

	"Dev Tools веб браузеров":

	[

		"Google Chrome",

		"FireFox"

	]

}

 15. Отправить сразу 2 файла на внешний репозиторий.
- git add preferences.json skils.json 
- git commit -m "add_preferences_skils_file"
- git pull
- git push
 16. На веб интерфейсе создать файл bug_report.json.
- create a new file  bug_report.json(GitHub)
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
- click on the Commit file new
 18. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON.
- click on the edit this file
- {

"Summary":"The error message doesn't disappear after filling in the required fields on the main page"

  "Bug description":

      {  

          "STR":

        {

          "1":"Go to main page",

          "2":"Click on the Next button",

          "3":"Fill in the required fields" 

        }

      },

 "AR":"The error messages remained",

 "ER":"No error messages",

 "Severity":"minor",

 "Reporter":"Name",

 "Assignee":"Name"

}

 19. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
- click on the Commit Changes
 20. Синхронизировать внешний и локальный репозиторий JSON
- git pull

